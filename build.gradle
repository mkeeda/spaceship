import dev.mkeeda.spaceship.buildsrc.GradlePlugins

buildscript {
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath GradlePlugins.kotlin
        classpath GradlePlugins.serialization
        classpath GradlePlugins.android
        classpath GradlePlugins.hilt
        classpath GradlePlugins.spotless
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}


subprojects {
    configurations.configureEach {
        // We forcefully exclude AppCompat + MDC from any transitive dependencies.
        // This is a Compose app, so there's no need for these
        exclude group: 'androidx.appcompat'
        exclude group: 'com.google.android.material', module: 'material'
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
        kotlinOptions {
            // Enable experimental coroutines APIs, including Flow
            freeCompilerArgs += "-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi"
            freeCompilerArgs += "-Xopt-in=kotlinx.coroutines.FlowPreview"
            freeCompilerArgs += "-Xopt-in=kotlin.Experimental"

            // Set JVM target to 1.8
            jvmTarget = "1.8"
        }
    }

    apply plugin: "com.diffplug.spotless"
    spotless {
        format 'misc', {
            target '*.gradle', '*.md', '.gitignore'

            trimTrailingWhitespace()
            indentWithSpaces()
            endWithNewline()
        }
        kotlin {
            target '**/*.kt'
            targetExclude("$buildDir/**/*.kt")
            targetExclude('bin/**/*.kt')
            /**
             * ktlint's default import ordering rule is not expected for Android Studio.
             * To fix this issue needs to refer .editorconfig file,but spotless dose not support to refer .editorconfig.
             * So disabled ktlint import ordering rule.
             * https://github.com/diffplug/spotless/issues/142
             */
            ktlint().userData([disabled_rules:'import-ordering'])
        }
        kotlinGradle {
            target '*.gradle.kts'
            ktlint()
        }
    }
}

Object propertyOrDefault(String propertyName, Object defaultValue) {
    def propertyValue = project.properties[propertyName]
    return propertyValue != null ? propertyValue : defaultValue
}
